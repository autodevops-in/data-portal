// Define reusable mixins and variables
@mixin card-border($color) {
  border-left: 4px solid $color;
}

@mixin card-header-bg($color) {
  background-color: rgba($color, 0.1);
}

@mixin tips-content-style($color, $bg-color) {
  background-color: $bg-color;
  padding: 1rem;
  border-radius: 0 0 4px 4px;
  border-left: 4px solid $color;
  color: var(--cui-body-color);
}

@mixin text-info-style($color, $bg-color) {
  font-size: 0.9rem;
  color: $color;
  background-color: $bg-color;
  padding: 0.75rem;
  border-radius: 4px;
  border-left: 3px solid $color;
}

// Variables
$devsecops-color: #20a8d8;
$devops-color: #4dbd74;
$info-bg-color: rgba(32, 168, 216, 0.05);
$card-bg-color: var(--cui-card-bg, #f8f9fa);

.code-container {
  border-radius: 4px;
  border: 1px solid #dee2e6;
  max-height: 500px;
  overflow-y: auto;
  position: relative;
}

pre {
  margin-bottom: 0;
  white-space: pre-wrap;
  word-wrap: break-word;
}

button[title="Copy to clipboard"] {
  display: flex;
  align-items: center;
  gap: 5px;
  transition: background-color 0.2s;

  &:hover {
    background-color: #e9ecef;
  }

  svg {
    margin-right: 4px;
  }
}

textarea {
  font-family: monospace;
}

.sample-prompts {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 1rem;
  margin-top: 1rem;
}

.sample-prompt-card {
  height: 100%;
  transition: transform 0.2s, box-shadow 0.2s;

  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  c-card-body {
    display: flex;
    flex-direction: column;
  }

  p {
    flex-grow: 1;
    margin-bottom: 1rem;
  }
}

.devsecops-card {
  @include card-border($devsecops-color);

  c-card-header {
    @include card-header-bg($devsecops-color);
  }
}

.devops-card {
  @include card-border($devops-color);

  c-card-header {
    @include card-header-bg($devops-color);
  }
}

.tips-content {
  @include tips-content-style($devsecops-color, $card-bg-color);

  ul {
    padding-left: 1.5rem;
  }

  li {
    margin-bottom: 0.5rem;
  }

  p.text-info {
    @include text-info-style(var(--cui-info, $devsecops-color), var(--cui-info-bg-subtle, $info-bg-color));
  }
}

c-accordion-item {
  border: 1px solid var(--cui-border-color, #dee2e6);
  border-radius: 4px;
  overflow: hidden;
}

::ng-deep .accordion-button {
  background-color: var(--cui-card-cap-bg, rgba(32, 168, 216, 0.1));
  color: var(--cui-body-color);
  font-weight: 500;

  &:not(.collapsed) {
    background-color: var(--cui-primary-bg-subtle, rgba(32, 168, 216, 0.2));
    color: var(--cui-body-color);
  }
}

/* Additional classes for accordion header */
.tips-header {
  color: var(--cui-emphasis-color, #333);
}

.tips-subheader {
  color: var(--cui-secondary, #6c757d) !important;
}

/* Fix for dark mode text */
:host-context([data-coreui-theme="dark"]) {
  .tips-content strong {
    color: var(--cui-emphasis-color);
  }

  ::ng-deep .accordion-button {
    color: var(--cui-body-color);
  }

  .tips-header {
    color: var(--cui-emphasis-color);
  }

  .tips-subheader {
    color: var(--cui-secondary, #6c757d) !important;
  }
}